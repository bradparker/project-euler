{-# LANGUAGE NumericUnderscores #-}
{-# OPTIONS_GHC -Wall #-}

module Main where

import Data.Foldable (foldl')

-- Each new term in the Fibonacci sequence is generated by adding the
-- previous two terms. By starting with 1 and 2, the first 10 terms
-- will be:
-- 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
-- By considering the terms in the Fibonacci sequence whose values do
-- not exceed four million, find the sum of the even-valued terms.

fibs :: [Int]
fibs = 1 : scanl (+) 2 fibs

sum' :: (Foldable t, Num a) => t a -> a
sum' = foldl' (+) 0

solve :: Int -> Int
solve bound = sum' (filter even (takeWhile (< bound) fibs))

solution :: Int
solution = solve 4_000_000

main :: IO ()
main = print solution
